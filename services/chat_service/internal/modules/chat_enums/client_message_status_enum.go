// Code generated by go-enum DO NOT EDIT.
// Version: 0.5.6
// Revision: 97611fddaa414f53713597918c5e954646cb8623
// Build Date: 2023-03-26T21:38:06Z
// Built By: goreleaser

package chat_enums

import (
	"errors"
	"fmt"
)

const (
	// ClientMessageStatusSent is a ClientMessageStatus of type sent.
	ClientMessageStatusSent ClientMessageStatus = "sent"
	// ClientMessageStatusAutoReply is a ClientMessageStatus of type auto_reply.
	ClientMessageStatusAutoReply ClientMessageStatus = "auto_reply"
	// ClientMessageStatusEdited is a ClientMessageStatus of type edited.
	ClientMessageStatusEdited ClientMessageStatus = "edited"
	// ClientMessageStatusDeleted is a ClientMessageStatus of type deleted.
	ClientMessageStatusDeleted ClientMessageStatus = "deleted"
	// ClientMessageStatusBlocked is a ClientMessageStatus of type blocked.
	ClientMessageStatusBlocked ClientMessageStatus = "blocked"
)

var ErrInvalidClientMessageStatus = errors.New("not a valid ClientMessageStatus")

// String implements the Stringer interface.
func (x ClientMessageStatus) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x ClientMessageStatus) IsValid() bool {
	_, err := ParseClientMessageStatus(string(x))
	return err == nil
}

var _ClientMessageStatusValue = map[string]ClientMessageStatus{
	"sent":       ClientMessageStatusSent,
	"auto_reply": ClientMessageStatusAutoReply,
	"edited":     ClientMessageStatusEdited,
	"deleted":    ClientMessageStatusDeleted,
	"blocked":    ClientMessageStatusBlocked,
}

// ParseClientMessageStatus attempts to convert a string to a ClientMessageStatus.
func ParseClientMessageStatus(name string) (ClientMessageStatus, error) {
	if x, ok := _ClientMessageStatusValue[name]; ok {
		return x, nil
	}
	return ClientMessageStatus(""), fmt.Errorf("%s is %w", name, ErrInvalidClientMessageStatus)
}
